<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="iconfontPanel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>